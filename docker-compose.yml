version: '3.7'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile-db
    container_name: city_library_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: city_library
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - web

  city-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: city_library_service
    restart: unless-stopped
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    ports:
      - '8080:8080'
    depends_on:
      - db
    networks:
      - web

  elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: unless-stopped
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - web

  logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: unless-stopped
    volumes:
      - ./elk/logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx1024m -Xms1024m"
    networks:
      - web

  kibana:
    image: kibana:7.16.2
    container_name: kibana
    restart: unless-stopped
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - web


networks:
  web:
    driver: "bridge"

volumes:
  db-volume: { }
  elastic_data: { }
